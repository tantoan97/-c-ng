#include <LiquidCrystal_I2C.h>
// Thu vien DHT
#include "DHT.h"
#include <TinyGPS.h>

#define DHTPIN PD_0   
#define PUMPW_ON PF_4   //Nút có s?n trên kit
#define PUMPW_PIN PF_2
#define PUMPS_ON PF_0   //Nút có s?n trên kit
#define PUMPS_PIN PF_3  
#define BT1 PF_0
#define LED1 PF_3
//#define DHTTYPE DHT11   // DHT 11
#define DHTTYPE DHT22   // DHT 22  (AM2302), AM2321
//#define DHTTYPE DHT21   // DHT 21 (AM2301)

// Ket noi
// DHT       | TIVA C
//----------------
// VCC(1)    |  3.3V
// DATA(2)   |  PD0
// NC(3)     |  x
// GND(4)    |  GND

// Noi tro 10k giua chân 1 và chân 2

// Khoi tao cam bien
int tong, anhsang,as;
String temper;
int sensorPin = PE_2;
float flat,flon;
int pre_dt,pre_dt_1;
int state,state_1;
int pump_stt,pump_stt_1;
int phannguyen_flat,bit1_flat,bit2_flat,bit3_flat;
int phannguyen_flon,bit1_flon,bit2_flon,bit3_flon;
int phannguyen_temp,bit1_temp,bit2_temp,bit3_temp;
int phannguyen_hum,bit1_hum,bit2_hum,bit3_hum;
unsigned long lastTime = 0;
bool flag = false;
DHT dht(DHTPIN, DHTTYPE);
TinyGPS gps;
// Khoi tao LCD
LiquidCrystal_I2C lcd(0x27, 16, 2);

void read_gps()
{
  while(Serial1.available()){ // check for gps data 
  if(gps.encode(Serial1.read()))// encode gps data 
  {  
  gps.f_get_position(&flat,&flon);
  }
  }
  Serial.print("Position: "); 
  Serial.print("Latitude:"); 
  Serial.print(flat,6); 
  Serial.print(";"); 
  Serial.print("Longitude:"); 
  Serial.println(flon,6);
} 

void xu_ly_data( int phannguyen,int bit_1,int bit_2, int bit_3, float data)
{
   phannguyen = int(data);
  float phantp = data - phannguyen;
  int i_phantp = phantp * 1000000;
 Serial.println(phannguyen);
 Serial.println(i_phantp);
Serial.println(i_phantp,BIN);
 bit_1 = i_phantp & 0xFF0000;
 bit_1 = bit_1 >> 16;
 Serial.println(bit_1,BIN);
 bit_2 = i_phantp & 0x00FF00;
 bit_2 = bit_2 >> 8;
 Serial.println(bit_2,BIN);
 bit_3 = i_phantp & 0x0000FF;
 Serial.println(bit_3,BIN);
 int ghep_pn = ((bit_1 << 16) + (bit_2 << 8) + bit_3);
 float ghep_pn_f = (float)ghep_pn/1000000;
 Serial.println(ghep_pn_f);
 Serial3.write(phannguyen);
 Serial3.write(bit_1);
 Serial3.write(bit_2);
 Serial3.write(bit_3);
}

void setup() {
  pinMode(PUMPW_PIN, OUTPUT);
  pinMode(PUMPS_PIN, OUTPUT);
  pinMode(LED1, OUTPUT);
  pinMode(PUMPW_ON, INPUT_PULLUP); 
  pinMode(PUMPS_ON, INPUT_PULLUP);
  pinMode(BT1, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(PF_4),change_status ,RISING); 
  attachInterrupt(digitalPinToInterrupt(BT1),change_status_1 ,RISING); 
  Serial3.begin(9600);
  Serial.begin(9600);
  Serial1.begin(9600);
  Serial.println("DHTxx test!");
  
  dht.begin();
  // Khoi tao LCD và in thông tin ban dau
  lcd.begin();
  lcd.print(" ===LUAN_VAN===");
  delay(1000);
  lcd.clear(); // In xong thông tin intro thì xóa ch? hi?n d? li?u
}

void loop() {
  
  int rc_data_s,rc_data_s_1;
  int rc_data,rc_data_1;
  while(Serial3.available()){
        
      rc_data = Serial3.read();
      Serial.println("dddddddddddddd545454");
      Serial.println(rc_data);
      rc_data_1 = Serial3.read();
      Serial.println(rc_data_1);
      Serial.println("dddddddddddddd545454");
      if(pre_dt != rc_data)
      {
          rc_data_s = rc_data;
          pre_dt = rc_data;
      }
      recive_data(rc_data_s);
      blinkled();
      if(pre_dt_1 != rc_data_1)
      {
          rc_data_s_1 = rc_data_1;
          pre_dt_1 = rc_data_1;
      }
      recive_data_1(rc_data_s_1);
      blinkled_1();
  }
      
  if((unsigned long)millis() - lastTime >= 2000){
      // Tat hien thi
    
      // Chi quá trình chuyen doi
      read_gps();
      pinMode(sensorPin, INPUT);
       anhsang = digitalRead(sensorPin);
       if (anhsang==0){
        as=1;}
        else {
          as=0;}
        float h = dht.readHumidity();
      // Ðoc giá tri nhiet do C (mac dinh)
      float t = dht.readTemperature();
      // Ðoc giá tri nhiet do F(isFahrenheit = true)
    //  float f = dht.readTemperature(true);
    
      // Kiem tra quá trình doc thành công hay không
      if (isnan(h) || isnan(t) ) {
        Serial.println("Failed to read from DHT sensor!");
        h=0 ;t=0;
        return;
      }
    //  float hif = dht.computeHeatIndex(f, h);
      // Tính chi so nhiet do C (isFahreheit = false)
      float hic = dht.computeHeatIndex(t, h, false);
      int soilValue = analogRead(PB_5);
      soilValue =((int)soilValue*100)/4096;
      soilValue=99-(int)soilValue;
      
      Serial3.write(0x23);
      xu_ly_data(phannguyen_flat,bit1_flat,bit2_flat,bit3_flat,flat);
      xu_ly_data(phannguyen_flon,bit1_flon,bit2_flon,bit3_flon,flon);
      xu_ly_data(phannguyen_temp,bit1_temp,bit2_temp,bit3_temp,t);
      xu_ly_data(phannguyen_hum,bit1_hum,bit2_hum,bit3_hum,h);
      Serial3.write(soilValue);
      
      // In thông tin ra màn hình debug
      //as = 0;
      Serial3.write(as);
      Serial.print("Humidity: ");
      Serial.print(h);
      Serial.print(" %\t");
      Serial.print("Temperature: ");
      Serial.print(t);
      Serial.print(" *C ");
      Serial.print("sun: ");
      Serial.print(as);
      Serial.print("   Soil Value:");
      Serial.print(soilValue);
      Serial3.write(0x25);
      Serial3.write(pump_stt);
      Serial3.write(pump_stt_1);
      delay(1);
      
      Serial.println("--------------------------------------");
        Serial.print("   button1:");
      Serial.println(String(rc_data));
      
       //IN thông tin lên LCD
       if(flag){
           lcd.clear();   
           lcd.setCursor(0, 1);
           lcd.print("HUMID = ");  // Thông tin ve do am
           lcd.print(h);
           lcd.println(" % " );
            
           lcd.setCursor(1, 0);
           lcd.print("TEMP = ");   // Thông tin ve nhiet do
           lcd.print(t);
           lcd.println("*C ");

          flag = !flag;
       }else{
          lcd.clear();
          lcd.setCursor(1, 0);
          lcd.print(" Solar = ");   // Thông tin ve anh sang
          lcd.print(as);
          lcd.setCursor(0, 1);
          lcd.print("Soil Value: ");  // Thông tin ve do am dat
          lcd.print(soilValue);
          lcd.println(" % " );
          flag = !flag;
       }       
       lastTime = millis();
  }
}
void change_status()
{
  state++ ;
  Serial.println("trang thai");
  Serial.println(state);
  if(state%2==1)
  digitalWrite(PF_2,HIGH);
  else
  digitalWrite(PF_2,LOW);
}
void change_status_1()
{
  state_1++ ;
  Serial.println("trang thai");
  Serial.println(state);
  if(state_1%2==1)
  digitalWrite(LED1,HIGH);
  else
  digitalWrite(LED1,LOW);
   Serial.println(state_1);
  Serial.println(state_1);
}
void blinkled()
{
  if(state%2==1)
  {
    pump_stt = 2;
     digitalWrite(PF_2,HIGH);
  }
  else
  {
    pump_stt = 3;
     digitalWrite(PF_2,LOW);
  }
  Serial.println(pump_stt);
}
void blinkled_1()
{
  if(state_1%2==1)
  {
    pump_stt_1 = 4;
     digitalWrite(LED1,HIGH);
  }
  else
  {
    pump_stt_1 = 5;
     digitalWrite(LED1,LOW);
  }
  Serial.println(pump_stt_1);
}
void recive_data(int rc_data_s1)
{
  if(rc_data_s1==2)
  {
  state = 1;
  
  }
  else if(rc_data_s1==3)
  {
  state = 0;
  }
}
void recive_data_1(int rc_data_s1)
{
  if(rc_data_s1==4)
  {
  state_1 = 1;
  
  }
  else if(rc_data_s1==5)
  {
  state_1 = 0;
  }
}